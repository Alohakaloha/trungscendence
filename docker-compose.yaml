version: '3.8'

services:
  postgres:
    image: "postgres:16.1"
    container_name: "postgres"
    environment:
      POSTGRES_DB : ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST : ${DB_HOST}
      POSTGRES_PORT : ${DB_PORT}
    volumes:
     - ./postgresql/data:/var/lib/postgresql/data
    networks:
      - t_network
    env_file:
      - .env
    # healthcheck:
    #   test: ["CMD-SHELL", "pg_isready -d mydatabase -U myuser"]
    #   interval: 5s
    #   timeout: 5s
    #   retries: 5

    ports: 
      - "5432:5432"
    restart: on-failure

  django:
    container_name: django
    build:
      context: ./django
      dockerfile: Dockerfile
    ports:
      - "7000:8000"
    networks:
      - t_network
    command:
        ["/code/start.sh"]
    volumes:
      - ./django/backend:/code
      - ./django/start.sh:/code/start.sh
      - static_volume:/code/staticstuff
      - ./log/django:/var/log/django
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DJANGO_SETTINGS_MODULE: backend.settings

    depends_on:
      - postgres
    env_file:
      - .env
    # healthcheck:
    #   test: ["CMD-SHELL", "curl --silent --fail localhost:7000 || exit 1"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 3
    #   start_period: 30s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    networks:
      - t_network
    volumes:
      - static_volume:/code/staticstuff
      - ./log/nginx:/var/log/nginx
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "443:443"
      - "8000:8000"
    depends_on:
      - django
    restart: on-failure

  redis:
    image: "redis:latest"
    container_name: "redis"
    ports:
      - "6379:6379"
    networks:
      - t_network


volumes:
  static_volume: {}
  prometheus_data: {}
  grafana_storage: {}


networks:
  t_network: {}